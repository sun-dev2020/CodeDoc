

Second Level 标签：

@brief: 使用它来写一段你正在文档化的method, property, class, file, struct, 或enum的短描述信息。
@discussion: 用它来写一段详尽的描述。如果需要你可以添加换行。
@param: 通过它你可以描述一个 method 或 function的参数信息。你可以使用多个这种标签。
@return: 用它来制定一个 method 或 function的返回值。
@see: 用它来指明其他相关的 method 或 function。你可以使用多个这种标签。
@sa: 同前一条类似。
@code: 使用这个标签，你可以在文档当中嵌入代码段。当在Help Inspector当中查看文档时，代码通过在一个特别的盒子中用一种不同的字体来展示。始终记住在写的代码结尾处使用@endcode标签。
@remark:在写文档时，用它来强调任何关于代码的特殊之处。


@class: 用它来指定一个class的注释文档块的开头。它是一个top level标签，在它后面应该给出class名字。
@interface: 同上
@protocol: 同上两个一样，只是针对protocols
@superclass: 当前class的superclass
@classdesign: 用这个标签来指出你为当前class使用的任何特殊设计模式（例如，你可以提到这个class是不是单例模式或者类似其它的模式）。
@coclass: 与当前class合作的另外一个class的名字。
@helps: 当前class帮助的class的名字。
@helper: 帮助当前class的class名字。




2015-08-04 10:53:00.058 Ivy[19879:6763595] 收到消息推送字典: {
    "_j_msgid" = 2609116672;
    aps =     {
        alert = "\U6709\U53562.0\U6b63\U5f0f\U5f00\U5356\Uff01";
        badge = 2;
        sound = "";
    };
    showType = 1;   /0
    showValue = "www.163.com";
}
2015-08-04 10: